// <auto-generated />
using System;
using KevinfalsPhone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KevinfalsPhone.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("KevinfalsPhone.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Huawei"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "Apple"
                        },
                        new
                        {
                            Id = 4,
                            Nom = "GooglePixel"
                        });
                });

            modelBuilder.Entity("KevinfalsPhone.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseLivraison")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NombreProduits")
                        .HasColumnType("int");

                    b.Property<string>("NumeroFacture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PrixTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(7937),
                            Description = "Smartphone haut de gamme",
                            Image = "huawei-p50.jpg",
                            Nom = "Huawei P50 Pro",
                            Prix = 899.99m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(7996),
                            Description = "Tablette performante",
                            Image = "huawei-matepad.jpg",
                            Nom = "Huawei MatePad",
                            Prix = 449.99m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(8003),
                            Description = "Dernier flagship Samsung",
                            Image = "samsung-s24.jpg",
                            Nom = "Samsung Galaxy S24",
                            Prix = 1099.99m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(8009),
                            Description = "Tablette premium",
                            Image = "samsung-tabs9.jpg",
                            Nom = "Samsung Galaxy Tab S9",
                            Prix = 649.99m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(8014),
                            Description = "iPhone dernière génération",
                            Image = "iphone15pro.jpg",
                            Nom = "iPhone 15 Pro",
                            Prix = 1299.99m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(8022),
                            Description = "Ordinateur portable léger",
                            Image = "macbook-air.jpg",
                            Nom = "MacBook Air M2",
                            Prix = 1499.99m,
                            Stock = 4
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(8027),
                            Description = "Smartphone Google avec IA",
                            Image = "pixel8pro.jpg",
                            Nom = "Google Pixel 8 Pro",
                            Prix = 999.99m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            DateCreation = new DateTime(2025, 6, 7, 16, 27, 26, 936, DateTimeKind.Local).AddTicks(8033),
                            Description = "Écouteurs sans fil",
                            Image = "pixel-buds.jpg",
                            Nom = "Google Pixel Buds",
                            Prix = 199.99m,
                            Stock = 15
                        });
                });

            modelBuilder.Entity("KevinfalsPhone.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.Order", b =>
                {
                    b.HasOne("KevinfalsPhone.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.OrderItem", b =>
                {
                    b.HasOne("KevinfalsPhone.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KevinfalsPhone.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.Product", b =>
                {
                    b.HasOne("KevinfalsPhone.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KevinfalsPhone.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
